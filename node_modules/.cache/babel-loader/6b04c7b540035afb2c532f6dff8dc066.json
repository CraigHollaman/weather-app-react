{"ast":null,"code":"var _jsxFileName = \"/Users/Family/Documents/React/react-weather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const api = {\n    key: \"8ab7982656d9c2c93296f02ac3f36a0f\",\n    base: \"url_base: 'https://api.openweathermap.org/data/2.5/\"\n  };\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {//setWeather(result);\n        //setQuery('');\n        //console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = () => {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    className: \"search-bar\",\n    placeholder: \"Enter a place...\",\n    onChange: e => {\n      setQuery(e.target.value);\n    },\n    onKeyPress: search,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \" location\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, dateBuilder()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \" 0 \\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature-sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Min -\\xB0C | Max -\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conditions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, \"Conditions\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Family/Documents/React/react-weather-app/src/App.js"],"names":["React","useState","App","query","setQuery","weather","setWeather","api","key","base","search","evt","fetch","then","res","json","result","dateBuilder","d","Date","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\n\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({});\n  \n  const api = {\n    key: \"8ab7982656d9c2c93296f02ac3f36a0f\",\n    base: \"url_base: 'https://api.openweathermap.org/data/2.5/\",   \n  }\n\n \n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          //setWeather(result);\n          //setQuery('');\n          //console.log(result);\n        });\n    }\n  }\n\n\nconst dateBuilder = () => {\n  let d = new Date()\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n}\n\n\n  return (\n    <div className=\"App\"> \n    <main>\n   <div className=\"search-box\">\n     <input type=\"text\" \n     name=\"search\" \n     className=\"search-bar\" \n     placeholder=\"Enter a place...\" \n     onChange={e => {setQuery(e.target.value)}}\n     onKeyPress={search}\n     value={query} />\n   </div>\n   <div className=\"weather-holder\" >\n     <div className=\"location\"> location</div>\n     <div className=\"date\">{ dateBuilder()}</div>\n     <div className=\"temperature\"> 0 °C</div>\n    <div className=\"temperature-sub\">\n      Min -°C \n      | \n      Max -\n    </div>\n  <div className=\"conditions\">Conditions</div>\n  </div>\n   </main>\n\n\n\n      </div>\n     \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}