{"ast":null,"code":"var _jsxFileName = \"/Users/Family/Documents/React/react-weather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport weatherData from './weatherdata';\nconst api = {\n  weatherData\n};\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n      });\n    }\n  };\n\n  const dateBuilder = () => {\n    let d = new Date();\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const getTime = () => {\n    let d = new Date();\n    let h = d.getHours();\n    return h;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: getTime() > 18 ? 'night' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    className: \"search-bar\",\n    placeholder: \"Enter a place...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, weather.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, \" \", dateBuilder()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature-sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 2\n    }\n  }, Math.round(weather.main.temp_min), \" Min.-\\xB0C |\", Math.round(weather.main.temp_max), \" Max.-\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conditions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }\n  }, weather.weather[0].description))) : ''));\n}","map":{"version":3,"sources":["/Users/Family/Documents/React/react-weather-app/src/App.js"],"names":["React","useState","weatherData","api","App","query","setQuery","weather","setWeather","search","evt","key","fetch","base","then","res","json","result","dateBuilder","d","Date","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","getTime","h","getHours","e","target","value","main","name","Math","round","temp","temp_min","temp_max","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,GAAG,GAAG;AACXD,EAAAA;AADW,CAAZ;AAGA,eAAe,SAASE,GAAT,GAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACC,GAAJ,KAAY,OAAhB,EAAyB;AACvBC,MAAAA,KAAK,CAAE,GAAET,GAAG,CAACU,IAAK,aAAYR,KAAM,uBAAsBF,GAAG,CAACQ,GAAI,EAA7D,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdT,QAAAA,UAAU,CAACS,MAAD,CAAV;AACAX,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OALH;AAMD;AACF,GATD;;AAWA,QAAMY,WAAW,GAAG,MAAM;AACxB,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,QAAIC,GAAG,GAAGD,IAAI,CAACH,CAAC,CAACK,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGN,CAAC,CAACO,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACF,CAAC,CAACS,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGV,CAAC,CAACW,WAAF,EAAX;AACA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACD,GATD;;AAWA,QAAME,OAAO,GAAG,MAAM;AACpB,QAAIZ,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,QAAIY,CAAC,GAAGb,CAAC,CAACc,QAAF,EAAR;AACA,WAAOD,CAAP;AACD,GAJD;;AAMA,sBAEF;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAM,IAAA,SAAS,EAAED,OAAO,KAAK,EAAZ,GAAiB,OAAjB,GAA2B,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,SAAS,EAAC,YAFV;AAGA,IAAA,WAAW,EAAC,kBAHZ;AAIA,IAAA,QAAQ,EAAEG,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAKA,IAAA,KAAK,EAAE/B,KALP;AAMA,IAAA,UAAU,EAAEI,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,EAWE,OAAOF,OAAO,CAAC8B,IAAf,IAAuB,WAAxB,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B9B,OAAO,CAAC+B,IAAnC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwBpB,WAAW,EAAnC,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BqB,IAAI,CAACC,KAAL,CAAWjC,OAAO,CAAC8B,IAAR,CAAaI,IAAxB,CAA9B,UAHF,eAIC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,IAAI,CAACC,KAAL,CAAWjC,OAAO,CAAC8B,IAAR,CAAaK,QAAxB,CADD,mBAGGH,IAAI,CAACC,KAAL,CAAWjC,OAAO,CAAC8B,IAAR,CAAaM,QAAxB,CAHH,gBAJD,eASA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BpC,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBqC,WAAhD,CATA,CADQ,CADP,GAcI,EAzBL,CAFA,CAFE;AAiCD","sourcesContent":["import React, { useState } from 'react';\nimport weatherData from './weatherdata'\n\nconst api = {\n weatherData\n}\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n        });\n    }\n  }\n\n  const dateBuilder = () => {\n    let d = new Date()\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  }\n  \n  const getTime = () => {\n    let d = new Date()\n    let h = d.getHours()\n    return h\n  }\n\n  return (\n\n<div id=\"app\">\n  \n<main className={getTime() > 18 ? 'night' : ''}>\n<div className=\"search-box\">\n  <input type=\"text\" \n  name=\"search\" \n  className=\"search-bar\" \n  placeholder=\"Enter a place...\"\n  onChange={e => setQuery(e.target.value)}\n  value={query}\n  onKeyPress={search}\n   />\n</div>\n{(typeof weather.main != \"undefined\") ? (\n        <div>\n<div className=\"weather-holder\">\n  <div className=\"location\">{weather.name}</div>\n  <div className=\"date\"> {dateBuilder()}</div>\n  <div className=\"temperature\">{Math.round(weather.main.temp)}°C</div>\n <div className=\"temperature-sub\">\n {Math.round(weather.main.temp_min)} Min.-°C \n   | \n   {Math.round(weather.main.temp_max)} Max.-°C\n </div>\n<div className=\"conditions\">{weather.weather[0].description}</div>\n</div>\n</div>\n) : ('')}\n</main>\n</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}